//===----------------------------------------------------------------------===//
//
// This source file is part of the Swift Cluster Membership open source project
//
// Copyright (c) 2020 Apple Inc. and the Swift Cluster Membership project authors
// Licensed under Apache License v2.0
//
// See LICENSE.txt for license information
// See CONTRIBUTORS.md for the list of Swift Cluster Membership project authors
//
// SPDX-License-Identifier: Apache-2.0
//
//===----------------------------------------------------------------------===//


syntax = "proto3";

option optimize_for = SPEED;
option swift_prefix = "Proto";

import "ClusterMembership/ClusterMembership.proto";

message SWIMMessage {
    oneof message {
        SWIMPing ping             = 1;
        SWIMPingRequest pingReq   = 2;

        SWIMPingResponse response = 3;
    }
}

message SWIMPing {
    int32 sequenceNr    = 1;
    Peer replyTo        = 2;
    SWIMPayload payload = 3;
}

message SWIMPingRequest {
    int32 sequenceNr    = 1;
    Peer target         = 2;
    Peer replyTo        = 3;
    SWIMPayload payload = 4;
}

message SWIMPingResponse {
    message Ack {
        int32 sequenceNr    = 1;
        Node target         = 2;
        uint64 incarnation  = 3;
        SWIMPayload payload = 4;
    }
    message Nack {
        int32 sequenceNr = 1;
        Node target      = 2;
    }
    oneof pingResponse {
        Ack ack          = 1;
        Nack nack        = 2;
    }
}

message SWIMStatus {
    enum Type {
        UNSPECIFIED = 0;
        ALIVE       = 1;
        SUSPECT     = 2;
        UNREACHABLE = 3;
        DEAD        = 4;
    }

    Type type                 = 1;
    uint64 incarnation        = 2;
    repeated Node suspectedBy = 3;
}

message SWIMMember {
    Peer peer         = 1;
    SWIMStatus status = 2;
}

message SWIMPayload {
    repeated SWIMMember members = 1;
}
